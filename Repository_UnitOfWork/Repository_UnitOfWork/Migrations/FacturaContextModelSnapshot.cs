// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository_UnitOfWork.Models;

#nullable disable

namespace Repository_UnitOfWork.Migrations
{
    [DbContext(typeof(FacturaContext))]
    partial class FacturaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repository_UnitOfWork.Models.Cabecera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cliente")
                        .HasColumnType("int");

                    b.Property<int>("DireccionEntrega")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("FormaPago")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente");

                    b.ToTable("Cabecera", (string)null);
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Detalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("NumeroCompra")
                        .HasColumnType("int");

                    b.Property<int>("Producto")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("NumeroCompra");

                    b.HasIndex("Producto");

                    b.ToTable("Detalles");
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Usuario", b =>
                {
                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasIndex("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Cabecera", b =>
                {
                    b.HasOne("Repository_UnitOfWork.Models.Cliente", "ClienteNavigation")
                        .WithMany("Cabeceras")
                        .HasForeignKey("Cliente")
                        .IsRequired()
                        .HasConstraintName("FK_Cabecera_Cliente");

                    b.Navigation("ClienteNavigation");
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Detalle", b =>
                {
                    b.HasOne("Repository_UnitOfWork.Models.Cabecera", "NumeroCompraNavigation")
                        .WithMany("Detalles")
                        .HasForeignKey("NumeroCompra")
                        .IsRequired()
                        .HasConstraintName("FK_Detalles_Cabecera");

                    b.HasOne("Repository_UnitOfWork.Models.Producto", "ProductoNavigation")
                        .WithMany("Detalles")
                        .HasForeignKey("Producto")
                        .IsRequired()
                        .HasConstraintName("FK_Detalles_Producto");

                    b.Navigation("NumeroCompraNavigation");

                    b.Navigation("ProductoNavigation");
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Usuario", b =>
                {
                    b.HasOne("Repository_UnitOfWork.Models.Cliente", "IdNavigation")
                        .WithMany()
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Cliente");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Cabecera", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Cliente", b =>
                {
                    b.Navigation("Cabeceras");
                });

            modelBuilder.Entity("Repository_UnitOfWork.Models.Producto", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
